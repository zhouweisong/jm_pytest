<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="1" time="55.540"><testcase classname="TestCases.test_login.Test_Login" file="TestCases/test_login.py" line="38" name="test_login_wrong_password" time="55.14145612716675"><failure message="AssertionError: assert False
 +  where False = &lt;bound method BasePage.toast_exist of &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;&gt;(&apos;啦啦号或密码错误，请重新输入&apos;)
 +    where &lt;bound method BasePage.toast_exist of &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;&gt; = &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;.toast_exist">self = &lt;TestCases.test_login.Test_Login object at 0x108510668&gt;
init_driver = &lt;appium.webdriver.webdriver.WebDriver (session=&quot;01a9bf14-635b-4316-a080-ffd6664f8930&quot;)&gt;

    @pytest.mark.debug
    def test_login_wrong_password(self,init_driver):
        home_page = Home_Page(init_driver)
        login_page = Login_Page(init_driver)
    
        home_page.touch_login()
        login_page.login_action(LD.login_success_username, LD.login_wrong_passwd)
        logging.info(&quot;测试用例：登陆----密码错误&quot;)
        message =&apos;啦啦号或密码错误，请重新输入&apos;
    
&gt;       assert login_page.toast_exist(message)
E       AssertionError: assert False
E        +  where False = &lt;bound method BasePage.toast_exist of &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;&gt;(&apos;啦啦号或密码错误，请重新输入&apos;)
E        +    where &lt;bound method BasePage.toast_exist of &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;&gt; = &lt;PageObjects.login_page.Login_Page object at 0x10894ac18&gt;.toast_exist

TestCases/test_login.py:49: AssertionError</failure></testcase></testsuite>